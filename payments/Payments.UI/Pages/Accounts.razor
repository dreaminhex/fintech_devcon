@page "/accounts"
@using Payments.Domain.Models
@using Payments.UI.Models
@using Payments.UI.Services
@inject UserService UserService
@inject AccountService AccountService
@inject NavigationManager Nav

<h3>Loan Accounts</h3>

@if (loanAccounts == null)
{
    <p><em>Loading accounts...</em></p>
}
else if (!loanAccounts.Any())
{
    <p>No loan accounts found.</p>
}
else
{
    <ul>
        @foreach (var acct in loanAccounts)
        {
            <li>
                <b>@acct.AccountName</b> — @acct.AccountNumber — Balance: $@acct.Balance
            </li>
        }
    </ul>
}

@code {
    private List<AccountModel>? loanAccounts;
    private UserModel? user;

    protected override async Task OnInitializedAsync()
    {
        user = UserService.User;

        if (user == null)
        {
            Nav.NavigateTo("/", true);
            return;
        }

        loanAccounts = await AccountService.GetLoanAccountsByAccountIds(user.LoanAccounts);
    }
}
